diff A..B  diffs A against B
log A..B show all commits that are in B but not A

log A...B show all commits in A and B
diff A...B show changes made in A compared to B

###
git remote add <name> URL

###branching
git checkout -b <name>

###push to remote
git push -u origin <name>
 
###remove all branches merged with master
git branch --merged master | grep -v "\* master" | xargs -n 1 git branch -d

###list all files that were changed in a rev.
git diff-tree --no-commit-id --name-only -r <SHA>
git show --pretty="format:" --name-only <SHA>

#move up one dir
src$ mv .git ../ 
src$ cd ..
project$ git add src
project$ git commit -a

#diff - files between branches
git diff --name-status <branch1>..branch2>

git diff --name-status <branch1>...<branch2> 
outputs changes that occurred on branch2 since branch1 was created from it



#git-flow ref

#########################################
FEATURE d->d
#########################################

start ###################################
$ git checkout -b myfeature develop

finish ##################################
$ git checkout develop
$ git merge --no-ff myfeature
$ git branch -d myfeature
$ git push origin develop

#########################################
RELEASE d->d/m
#########################################

start ################################### 
$ git checkout -b release-xxx develop
$ ./bump-version.sh xxx

finish #################################
$ git checkout master
$ git merge --no-ff release-xxx
$ git tag -a xxx "Release xxx"
$ git checkout develop
$ git merge --no-ff release-xxx
$ git branch -d release-xxx

#########################################
HOTFIXES m->m/d
#########################################

start ###################################
$ git checkout -b hotfix-xxx master
$ ./bump-version.sh xxx

finish ##################################
$ git commit -m "Fixed severe production problem"
$ git checkout master
$ git merge --no-ff hotfix-xxx
$ git tag -a xxx
$ git checkout develop
$ git merge --no-ff hotfix-xxx
$ git branch -d hotfix-xxx
